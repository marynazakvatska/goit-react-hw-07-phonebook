{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/actions.js","components/ContactForm/ContactForm.js","redux/selectors.js","components/ContactLIst/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactLIst/ContactList.module.css","components/Phonebook/Phonebook.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","SignupForm","dispatch","useDispatch","useState","setName","setNumber","nameInputId","numberInputId","handleChange","e","target","value","reset","className","s","forma","onSubmit","preventDefault","actions","htmlFor","type","pattern","title","required","onChange","btnsubmit","getFilter","state","contacts","filter","getVisibleContacts","items","getContacts","normalizedFilter","toLowerCase","contact","includes","ContactList","useSelector","contactList","map","contactItem","contactDescription","deleteBtn","onClick","onDeleteContact","Filter","label_filter","Phonebook","section","ContactForm","title_contact","App","createReducer","find","toast","error","_","combineReducers","persistConfig","key","storage","blacklist","rootReducer","phoneReducer","persistedReducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1358a101.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forma\":\"ContactForm_forma__1bt8m\",\"btnsubmit\":\"ContactForm_btnsubmit__3wNo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_filter\":\"Filter_label_filter__2a5Ny\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\n const addContact = createAction('ADD_PHONE', (  {name, number}  ) =>\r\n{\r\n  return {\r\n    payload:\r\n     {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    }    \r\n  }\r\n});\r\n\r\n\r\n const deleteContact = createAction('DELETE_PHONE');\r\n const changeFilter = createAction('FILTER_PHONE')\r\n\r\nexport default { addContact, deleteContact, changeFilter}\r\n     \r\n\r\n\r\n\r\n\r\n\r\n/*   export  const addContact = (  {name, number}  ) => ({\r\n   type: actionTypes.ADD_PHONE,\r\n     payload:\r\n     {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    }    \r\n  })   */\r\n\r\n/* \r\n export const deleteContact = (contactId) => ({\r\n     type:  actionTypes.DELETE_PHONE,\r\n    payload: contactId,      \r\n})\r\n     \r\n\r\n export const changeFilter = value => \r\n({\r\n    type: actionTypes.FILTER_PHONE,\r\n    payload: value,\r\n}) */\r\n       \r\n","import {useState} from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\n\r\n\r\n\r\n const SignupForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  \r\n  const nameInputId = shortid.generate();\r\n   const numberInputId = shortid.generate();\r\n\r\n\r\n\r\nconst  handleSubmit = e => {\r\n  e.preventDefault();\r\n  dispatch(actions.addContact({name, number}))\r\n   /*  onSubmit({name, number}) */\r\n    \r\nreset();\r\n    }\r\n \r\n  \r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    \r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      \r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      \r\n      default: return;\r\n    }\r\n    } \r\n  \r\n  \r\n const reset = () => {\r\n   setName('' )\r\n   setNumber( '')\r\n}\r\n\r\n  return (<div className={s.forma} >\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor={nameInputId}>\r\n Name <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n  required\r\nvalue={name}\r\n                 onChange={handleChange}\r\n                 id={nameInputId}\r\n                        />\r\n                    </label>\r\n\r\n\r\n          <label htmlFor={numberInputId}>\r\n Number <input\r\n  type=\"tel\"\r\n  name=\"number\"\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n  required\r\n value={number}\r\n onChange={handleChange}\r\n  id={numberInputId}\r\n/>\r\n          </label>\r\n\r\n            <button className={s.btnsubmit} type=\"submit\" >Add contact</button>\r\n        </form>\r\n\r\n        \r\n           </div>\r\n )\r\n}\r\n\r\nexport default SignupForm;\r\n\r\n/* const mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(addContact(contact))  \r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignupForm)\r\n */\r\n\r\n","\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact =>\r\n    \r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n}","import React from 'react';\r\nimport './ContactList.module.css';\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\n\r\n\r\nconst ContactList = () => {\r\n  \r\n  const contacts = useSelector(getVisibleContacts)\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactItem}>\r\n          <p className={s.contactDescription}>\r\n        \r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={s.deleteBtn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ContactList\r\n\r\n  /* const handleSubmit = ({ name, number }) => {\r\n     contacts.find(contact =>\r\n       contact.name.toLowerCase().includes(name.toLowerCase())\r\n         ? alert(`${contact.name}  already exist`)\r\n         :addContact(name, number)\r\n       \r\n     )\r\n   }; */\r\n  \r\n/* const getVisibleContacts = (allContacts, filter) => {\r\n  \r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    \r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n }\r\n\r\n\r\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\r\n  contacts: getVisibleContacts(items, filter)\r\n})\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id))\r\n  \r\n}) */\r\n\r\n/* export default connect(mapStateToProps, mapDispatchToProps)(ContactList) ;\r\n */\r\n\r\n\r\n\r\n\r\n/* ContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n      onDeleteContact : PropTypes.func.isRequired,\r\n}; */","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\nimport actions from '../../redux/actions'\r\nimport {useDispatch, useSelector } from 'react-redux';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\nreturn (\r\n   <label className={s.label_filter}>\r\n    Find contacts by name<input type=\"text\"\r\n      value={value}\r\n      onChange={(e) => dispatch(actions.changeFilter(e.target.value))}></input>\r\n        </label>\r\n)\r\n}\r\n\r\n\r\nexport default Filter;\r\n\r\n\r\n/* const mapStateToProps = state => ({\r\n  value: state.contacts.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: (e) => dispatch(changeFilter(e.target.value))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n */\r\n/* Filter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}; */","\r\nimport './Phonebook.module.css';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactLIst/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport s from './Phonebook.module.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n function Phonebook() {\r\n  \r\n    return (\r\n        <div className={s.section}>\r\n            <h1 className={s.title}>Phonebook</h1>\r\n            <ContactForm />\r\n\r\n            <h2 className={s.title_contact}>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n        <ToastContainer/>\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Phonebook","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Phonebook from \"./components/Phonebook/Phonebook\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Phonebook />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst addContact = (state, { payload }) => {\r\n    if (state.find(contact => contact.name.toLowerCase() === payload.name)) {\r\n\r\n        toast.error(` '${payload.name}' is already in your list`)\r\n        return state;\r\n    }\r\n  \r\n    return [...state, payload]\r\n}\r\n \r\n\r\n\r\nconst items = createReducer([], {\r\n     \r\n    [actions.addContact]: addContact ,\r\n    [actions.deleteContact]: (state, { payload }) => state.filter(({id}) => id !== payload),\r\n})\r\n\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, {payload}) => payload,\r\n})\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n})\r\n\r\n\r\n\r\n/* \r\nconst items = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n    case actionTypes.ADD_PHONE:\r\n     return   [...state, payload];\r\n           \r\n        \r\n      case actionTypes.DELETE_PHONE: \r\n            return state.filter(({id}) => id !== payload);\r\n         \r\n    default:\r\n      return state;\r\n  }\r\n} */\r\n\r\n\r\n/* const filter = (state = \"\", { type, payload }) => {\r\n     \r\n    switch (type) {\r\n      \r\n    case actionTypes.FILTER_PHONE:\r\n      return payload;\r\n         \r\n    default:\r\n      return state;\r\n  }\r\n} */","\r\n\r\nimport { combineReducers } from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport phoneReducer from './reducer';\r\nimport {\r\n  persistStore, persistReducer,\r\n   FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { logger } from 'redux-logger';\r\n\r\n\r\n \r\nconst persistConfig = {\r\n  key: 'persistedReducer',\r\n  storage,\r\n    blacklist: ['filter'],\r\n}\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: phoneReducer,\r\n});\r\n\r\n const persistedReducer = persistReducer(persistConfig, rootReducer); \r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default { store, persistor };\r\n\r\n\r\n\r\n\r\n\r\n/* const rootReducer = combineReducers({\r\n    contacts: phoneReducer,\r\n});\r\n */\r\n/* const store = createStore(rootReducer, composeWithDevTools()) */\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate persistor={store.persistor}>\r\n        <App />\r\n        </PersistGate>\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1mH1g\",\"contactItem\":\"ContactList_contactItem__1mq7K\",\"deleteBtn\":\"ContactList_deleteBtn__3owSI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__J-H2s\",\"section\":\"Phonebook_section__DPP6K\",\"title_contact\":\"Phonebook_title_contact__1LD9V\",\"filter_label\":\"Phonebook_filter_label__2Yd3z\"};"],"sourceRoot":""}